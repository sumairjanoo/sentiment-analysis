# -*- coding: utf-8 -*-
"""Sentiment_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zLHXjCYBDLqdjFrv5sWPx1ziZZyoY2bb
"""

import nltk
import spacy
import pandas as pd
import matplotlib.pyplot as plt
from wordcloud import WordCloud
from nltk.sentiment.vader import SentimentIntensityAnalyzer
from spacy import displacy
from spacy.tokens import Span

# Load spaCy model
nlp = spacy.load("en_core_web_sm")

# Initialize NLTK sentiment analyzer
nltk.download('vader_lexicon')
sia = SentimentIntensityAnalyzer()

def analyze_sentiment(text):
    """
    Analyze sentiment of the given text using both NLTK and spaCy.
    """
    # NLTK Sentiment Analysis
    nltk_sentiment = sia.polarity_scores(text)

    # spaCy Named Entity Recognition
    doc = nlp(text)
    entities = [(ent.text, ent.label_) for ent in doc.ents]

    return nltk_sentiment, entities

def visualize_wordcloud(text):
    """
    Generate and visualize a word cloud from the given text.
    """
    wordcloud = WordCloud(width=800, height=400, background_color='white').generate(text)
    plt.figure(figsize=(10, 5))
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis('off')
    plt.show()

def visualize_sentiments(sentiments):
    """
    Visualize sentiments as a bar plot.
    """
    sentiment_labels = ['Negative', 'Neutral', 'Positive']
    sentiment_scores = [sentiments['neg'], sentiments['neu'], sentiments['pos']]

    plt.figure(figsize=(8, 6))
    plt.bar(sentiment_labels, sentiment_scores, color=['red', 'gray', 'green'])
    plt.xlabel('Sentiment')
    plt.ylabel('Score')
    plt.title('Sentiment Scores')
    plt.show()

def main(text):
    """
    Main function to perform sentiment analysis and visualization.
    """
    # Analyze sentiment
    nltk_sentiment, entities = analyze_sentiment(text)

    # Print Sentiment Results
    print("Sentiment Analysis (NLTK):")
    print(f"Negative: {nltk_sentiment['neg']}")
    print(f"Neutral: {nltk_sentiment['neu']}")
    print(f"Positive: {nltk_sentiment['pos']}")
    print(f"Compound: {nltk_sentiment['compound']}")

    print("\nNamed Entities:")
    for entity in entities:
        print(f"{entity[0]}: {entity[1]}")

    # Visualize Word Cloud
    visualize_wordcloud(text)

    # Visualize Sentiments
    visualize_sentiments(nltk_sentiment)

if __name__ == "__main__":
    # Sample text for demonstration
    sample_text = """
    The movie was absolutely fantastic! The actors did a great job, and the story was incredibly engaging.
    I would definitely recommend it to everyone. However, the ending was a bit disappointing.
    """

    main(sample_text)